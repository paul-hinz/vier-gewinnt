# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import game_ai_pb2 as GameAI__pb2


class GameAiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GiveBestMove = channel.unary_unary(
            '/GameAi/GiveBestMove',
            request_serializer=GameAI__pb2.BoardStateRequest.SerializeToString,
            response_deserializer=GameAI__pb2.ColumnReply.FromString,
        )


class GameAiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GiveBestMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameAiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GiveBestMove': grpc.unary_unary_rpc_method_handler(
            servicer.GiveBestMove,
            request_deserializer=GameAI__pb2.BoardStateRequest.FromString,
            response_serializer=GameAI__pb2.ColumnReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'GameAi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class GameAi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GiveBestMove(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameAi/GiveBestMove',
                                             GameAI__pb2.BoardStateRequest.SerializeToString,
                                             GameAI__pb2.ColumnReply.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
